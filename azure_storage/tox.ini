# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
allowlist_externals =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands_pre =
    poetry install --only format
commands =
    poetry install --only format
    poetry run ruff format {[vars]all_path}
    ; poetry run isort --profile black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands_pre =
    poetry install --only lint
commands =
    poetry run ruff format --check {[vars]all_path}
    poetry run ruff check {[vars]all_path}
    poetry run codespell {tox_root} \
        --skip {tox_root}/.git \
        --skip {tox_root}/.tox \
        --skip {tox_root}/build \
        --skip {tox_root}/tests/integration/app-charm/lib \
        --skip {tox_root}/lib \
        --skip {tox_root}/venv \
        --skip {tox_root}/.mypy_cache \
        --skip {tox_root}/icon.svg \
        --skip {tox_root}/poetry.lock


[testenv:unit]
description = Run unit tests
commands_pre =
    poetry install --only main,charm-libs,unit
commands =
    poetry run coverage run --source={[vars]src_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    poetry run coverage report

[testenv:integration]
description = Run integration tests
set_env =
    {[testenv]set_env}
pass_env =
    CI
    GITHUB_OUTPUT
    SECRETS_FROM_GITHUB
commands_pre =
    poetry install --only integration
commands =
    poetry run pytest -v --tb native --log-cli-level=INFO -s --ignore={[vars]tests_path}/unit/ {posargs}
